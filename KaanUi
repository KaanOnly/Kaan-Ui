local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")

local KaanuiLib = {
	Elements = {},
	ThemeObjects = {},
	Connections = {},
	Flags = {},
	Themes = {
		Default = {
			Main = Color3.fromRGB(25, 25, 25),
			Second = Color3.fromRGB(32, 32, 32),
			Stroke = Color3.fromRGB(60, 60, 60),
			Divider = Color3.fromRGB(60, 60, 60),
			Text = Color3.fromRGB(240, 240, 240),
			TextDark = Color3.fromRGB(150, 150, 150)
		}
	},
	SelectedTheme = "Default",
	Folder = nil,
	SaveCfg = false
}

--Feather Icons https://github.com/evoincorp/lucideblox/tree/master/src/modules/util - Created by 7kayoh
local Icons = {}

local Success, Response = pcall(function()
	Icons = HttpService:JSONDecode(game:HttpGetAsync("https://raw.githubusercontent.com/evoincorp/lucideblox/master/src/modules/util/icons.json")).icons
end)

if not Success then
	print("\nKaanui Library - Failed to load Feather Icons. Error code: " .. Response .. "\n")
end	

local function GetIcon(IconName)
	if Icons[IconName] ~= nil then
		return Icons[IconName]
	else
		return nil
	end
end   

local Kaanui = Instance.new("ScreenGui")
Kaanui.Name = "Kaanui"
if syn then
	syn.protect_gui(Kaanui)
	Kaanui.Parent = game.CoreGui
else
	Kaanui.Parent = gethui() or game.CoreGui
end

if gethui then
	for _, Interface in ipairs(gethui():GetChildren()) do
		if Interface.Name == Kaanui.Name and Interface ~= Kaanui then
			Interface:Destroy()
		end
	end
else
	for _, Interface in ipairs(game.CoreGui:GetChildren()) do
		if Interface.Name == Kaanui.Name and Interface ~= Kaanui then
			Interface:Destroy()
		end
	end
end

function KaanuiLib:IsRunning()
	if gethui then
		return Kaanui.Parent == gethui()
	else
		return Kaanui.Parent == game:GetService("CoreGui")
	end
end

local function AddConnection(Signal, Function)
	if (not KaanuiLib:IsRunning()) then
		return
	end
	local SignalConnect = Signal:Connect(Function)
	table.insert(KaanuiLib.Connections, SignalConnect)
	return SignalConnect
end

task.spawn(function()
	while (KaanuiLib:IsRunning()) do
		wait()
	end

	for _, Connection in next, KaanuiLib.Connections do
		Connection:Disconnect()
	end
end)

local function MakeDraggable(DragPoint, Main)
	pcall(function()
		local Dragging, DragInput, MousePos, FramePos = false
		AddConnection(DragPoint.InputBegan, function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				Dragging = true
				MousePos = Input.Position
				FramePos = Main.Position

				Input.Changed:Connect(function()
					if Input.UserInputState == Enum.UserInputState.End then
						Dragging = false
					end
				end)
			end
		end)
		AddConnection(DragPoint.InputChanged, function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseMovement then
				DragInput = Input
			end
		end)
		AddConnection(UserInputService.InputChanged, function(Input)
			if Input == DragInput and Dragging then
				local Delta = Input.Position - MousePos
				Main.Position  = UDim2.new(FramePos.X.Scale, FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)
			end
		end)
	end)
end    

local function Create(Name, Properties, Children)
	local Object = Instance.new(Name)
	for i, v in next, Properties or {} do
		Object[i] = v
	end
	for i, v in next, Children or {} do
		v.Parent = Object
	end
	return Object
end

local function CreateElement(ElementName, ElementFunction)
	KaanuiLib.Elements[ElementName] = function(...)
		return ElementFunction(...)
	end
end

local function MakeElement(ElementName, ...)
	local NewElement = KaanuiLib.Elements[ElementName](...)
	return NewElement
end

local function SetProps(Element, Props)
	table.foreach(Props, function(Property, Value)
		Element[Property] = Value
	end)
	return Element
end

local function SetChildren(Element, Children)
	table.foreach(Children, function(_, Child)
		Child.Parent = Element
	end)
	return Element
end

local function Round(Number, Factor)
	local Result = math.floor(Number/Factor + (math.sign(Number) * 0.5)) * Factor
	if Result < 0 then Result = Result + Factor end
	return Result
end

local function ReturnProperty(Object)
	if Object:IsA("Frame") or Object:IsA("TextButton") then
		return "BackgroundColor3"
	end 
	if Object:IsA("ScrollingFrame") then
		return "ScrollBarImageColor3"
	end 
	if Object:IsA("UIStroke") then
		return "Color"
	end 
	if Object:IsA("TextLabel") or Object:IsA("TextBox") then
		return "TextColor3"
	end   
	if Object:IsA("ImageLabel") or Object:IsA("ImageButton") then
		return "ImageColor3"
	end   
end

local function AddThemeObject(Object, Type)
	if not KaanuiLib.ThemeObjects[Type] then
		KaanuiLib.ThemeObjects[Type] = {}
	end    
	table.insert(KaanuiLib.ThemeObjects[Type], Object)
	Object[ReturnProperty(Object)] = KaanuiLib.Themes[KaanuiLib.SelectedTheme][Type]
	return Object
end    

local function SetTheme()
	for Name, Type in pairs(KaanuiLib.ThemeObjects) do
		for _, Object in pairs(Type) do
			Object[ReturnProperty(Object)] = KaanuiLib.Themes[KaanuiLib.SelectedTheme][Name]
		end    
	end    
end

local function PackColor(Color)
	return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
	return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function LoadCfg(Config)
	local Data = HttpService:JSONDecode(Config)
	table.foreach(Data, function(a,b)
		if KaanuiLib.Flags[a] then
			spawn(function() 
				if KaanuiLib.Flags[a].Type == "Colorpicker" then
					KaanuiLib.Flags[a]:Set(UnpackColor(b))
				else
					KaanuiLib.Flags[a]:Set(b)
				end    
			end)
		end
	end)
end

local function SaveCfg(Name)
	local Data = {}
	for i,v in pairs(KaanuiLib.Flags) do
		if v.Save then
			if v.Type == "Colorpicker" then
				Data[i] = PackColor(v.Value)
			else
				Data[i] = v.Value
			end
		end	
	end
	writefile(KaanuiLib.Folder .. "/" .. Name .. ".txt", tostring(HttpService:JSONEncode(Data)))
end

local WhitelistedMouse = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2, Enum.UserInputType.MouseButton3}
local BlacklistedKeys = {
    Enum.KeyCode.Unknown,
    Enum.KeyCode.W,
    Enum.KeyCode.A,
    Enum.KeyCode.S,
    Enum.KeyCode.D,
    Enum.KeyCode.Up,
    Enum.KeyCode.Left,
    Enum.KeyCode.Down,
    Enum.KeyCode.Right,
    Enum.KeyCode.Slash,
    Enum.KeyCode.Tab,
    Enum.KeyCode.Backspace,
    Enum.KeyCode.Escape
}

local function CheckKey(Table, Key)
	for _, v in next, Table do
		if v == Key then
			return true
		end
	end
end

CreateElement("Corner", function(Scale, Offset)
	local Corner = Create("UICorner", {
		CornerRadius = UDim.new(Scale or 0, Offset or 10)
	})
	return Corner
end)

CreateElement("Stroke", function(Color, Thickness)
	local Stroke = Create("UIStroke", {
		Color = Color or Color3.fromRGB(255, 255, 255),
		Thickness = Thickness or 1
	})
	return Stroke
end)

CreateElement("List", function(Scale, Offset)
	local List = Create("UIListLayout", {
		SortOrder = Enum.SortOrder.LayoutOrder,
		Padding = UDim.new(Scale or 0, Offset or 0)
	})
	return List
end)

CreateElement("Padding", function(Bottom, Left, Right, Top)
	local Padding = Create("UIPadding", {
		PaddingBottom = UDim.new(0, Bottom or 4),
		PaddingLeft = UDim.new(0, Left or 4),
		PaddingRight = UDim.new(0, Right or 4),
		PaddingTop = UDim.new(0, Top or 4)
	})
	return Padding
end)

CreateElement("TFrame", function()
	local TFrame = Create("Frame", {
		BackgroundTransparency = 1
	})
	return TFrame
end)

CreateElement("Frame", function(Color)
	local Frame = Create("Frame", {
		BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
		BorderSizePixel = 0
	})
	return Frame
end)

CreateElement("RoundFrame", function(Color, Scale, Offset)
	local Frame = Create("Frame", {
		BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
		BorderSizePixel = 0
	}, {
		Create("UICorner", {
			CornerRadius = UDim.new(Scale, Offset)
		})
	})
	return Frame
end)

CreateElement("Button", function()
	local Button = Create("TextButton", {
		Text = "",
		AutoButtonColor = false,
		BackgroundTransparency = 1,
		BorderSizePixel = 0
	})
	return Button
end)

CreateElement("ScrollFrame", function(Color, Width)
	local ScrollFrame = Create("ScrollingFrame", {
		BackgroundTransparency = 1,
		MidImage = "rbxassetid://7445543667",
		BottomImage = "rbxassetid://7445543667",
		TopImage = "rbxassetid://7445543667",
		ScrollBarImageColor3 = Color,
		BorderSizePixel = 0,
		ScrollBarThickness = Width,
		CanvasSize = UDim2.new(0, 0, 0, 0)
	})
	return ScrollFrame
end)

CreateElement("Image", function(ImageID)
	local ImageNew = Create("ImageLabel", {
		Image = ImageID,
		BackgroundTransparency = 1
	})

	if GetIcon(ImageID) ~= nil then
		ImageNew.Image = GetIcon(ImageID)
	end	

	return ImageNew
end)

CreateElement("ImageButton", function(ImageID)
	local Image = Create("ImageButton", {
		Image = ImageID,
		BackgroundTransparency = 1
	})
	return Image
end)

CreateElement("Label", function(Text, TextSize, Transparency)
	local Label = Create("TextLabel", {
		Text = Text or "",
		TextColor3 = Color3.fromRGB(240, 240, 240),
		TextTransparency = Transparency or 0,
		TextSize = TextSize or 15,
		Font = Enum.Font.Gotham,
		RichText = true,
		BackgroundTransparency = 1,
		TextXAlignment = Enum.TextXAlignment.Left
	})
	return Label
end)

local NotificationHolder = SetProps(SetChildren(MakeElement("TFrame"), {
	SetProps(MakeElement("List"), {
		HorizontalAlignment = Enum.HorizontalAlignment.Center,
		SortOrder = Enum.SortOrder.LayoutOrder,
		VerticalAlignment = Enum.VerticalAlignment.Bottom,
		Padding = UDim.new(0, 5)
	})
}), {
	Position = UDim2.new(1, -25, 1, -25),
	Size = UDim2.new(0, 300, 1, -25),
	AnchorPoint = Vector2.new(1, 1),
	Parent = Kaanui
})

function KaanuiLib:MakeNotification(NotificationConfig)
	spawn(function()
		NotificationConfig.Name = NotificationConfig.Name or "Notification"
		NotificationConfig.Content = NotificationConfig.Content or "Test"
		NotificationConfig.Image = NotificationConfig.Image or "rbxassetid://4384403532"
		NotificationConfig.Time = NotificationConfig.Time or 15

		local NotificationParent = SetProps(MakeElement("TFrame"), {
			Size = UDim2.new(1, 0, 0, 0),
			AutomaticSize = Enum.AutomaticSize.Y,
			Parent = NotificationHolder
		})

		local NotificationFrame = SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(25, 25, 25), 0, 10), {
			Parent = NotificationParent, 
			Size = UDim2.new(1, 0, 0, 0),
			Position = UDim2.new(1, -55, 0, 0),
			BackgroundTransparency = 0,
			AutomaticSize = Enum.AutomaticSize.Y
		}), {
			MakeElement("Stroke", Color3.fromRGB(93, 93, 93), 1.2),
			MakeElement("Padding", 12, 12, 12, 12),
			SetProps(MakeElement("Image", NotificationConfig.Image), {
				Size = UDim2.new(0, 20, 0, 20),
				ImageColor3 = Color3.fromRGB(240, 240, 240),
				Name = "Icon"
			}),
			SetProps(MakeElement("Label", NotificationConfig.Name, 15), {
				Size = UDim2.new(1, -30, 0, 20),
				Position = UDim2.new(0, 30, 0, 0),
				Font = Enum.Font.GothamBold,
				Name = "Title"
			}),
			SetProps(MakeElement("Label", NotificationConfig.Content, 14), {
				Size = UDim2.new(1, 0, 0, 0),
				Position = UDim2.new(0, 0, 0, 25),
				Font = Enum.Font.GothamSemibold,
				Name = "Content",
				AutomaticSize = Enum.AutomaticSize.Y,
				TextColor3 = Color3.fromRGB(200, 200, 200),
				TextWrapped = true
			})
		})

		TweenService:Create(NotificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 0, 0, 0)}):Play()

		wait(NotificationConfig.Time - 0.88)
		TweenService:Create(NotificationFrame.Icon, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
		TweenService:Create(NotificationFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()
		wait(0.3)
		TweenService:Create(NotificationFrame.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0.9}):Play()
		TweenService:Create(NotificationFrame.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.4}):Play()
		TweenService:Create(NotificationFrame.Content, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.5}):Play()
		wait(0.05)

		NotificationFrame:TweenPosition(UDim2.new(1, 20, 0, 0), 'In', 'Quint', 0.8, true)
		wait(1.35)
		NotificationFrame:Destroy()
	end)
end    

function KaanuiLib:Init()
	if KaanuiLib.SaveCfg then	
		pcall(function()
			if isfile(KaanuiLib.Folder .. "/" .. game.GameId .. ".txt") then
				LoadCfg(readfile(KaanuiLib.Folder .. "/" .. game.GameId .. ".txt"))
				KaanuiLib:MakeNotification({
					Name = "Configuration",
					Content = "Auto-loaded configuration for the game " .. game.GameId .. ".",
					Time = 5
				})
			end
		end)		
	end	
end	

function Kaanui:MakeWindow(WindowConfig)
    local FirstTab = true
    local Minimized = false
    local UIHidden = false

    WindowConfig = WindowConfig or {}
    WindowConfig.Name = WindowConfig.Name or "Kaanui Library"
    WindowConfig.ConfigFolder = WindowConfig.ConfigFolder or WindowConfig.Name
    WindowConfig.SaveConfig = WindowConfig.SaveConfig or false
    WindowConfig.HidePremium = WindowConfig.HidePremium or false
    WindowConfig.IntroEnabled = WindowConfig.IntroEnabled == nil and true or WindowConfig.IntroEnabled
    WindowConfig.IntroText = WindowConfig.IntroText or "Kaanui Library"
    WindowConfig.CloseCallback = WindowConfig.CloseCallback or function() end
    WindowConfig.ShowIcon = WindowConfig.ShowIcon or false
    WindowConfig.Icon = WindowConfig.Icon or "rbxassetid://8834748103"
    WindowConfig.IntroIcon = WindowConfig.IntroIcon or "rbxassetid://8834748103"

    Kaanui.Folder = WindowConfig.ConfigFolder
    Kaanui.SaveCfg = WindowConfig.SaveConfig

    if WindowConfig.SaveConfig and not isfolder(WindowConfig.ConfigFolder) then
        makefolder(WindowConfig.ConfigFolder)
    end

    local TabHolder = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 4), {
        Size = UDim2.new(1, 0, 1, -50)
    }), {
        MakeElement("List"),
        MakeElement("Padding", 8, 0, 0, 8)
    }), "Divider")

    AddConnection(TabHolder.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
        TabHolder.CanvasSize = UDim2.new(0, 0, 0, TabHolder.UIListLayout.AbsoluteContentSize.Y + 16)
    end)

    local CloseBtn = SetChildren(SetProps(MakeElement("Button"), {
        Size = UDim2.new(0.5, 0, 1, 0),
        Position = UDim2.new(0.5, 0, 0, 0),
        BackgroundTransparency = 1
    }), {
        AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072725342"), {
            Position = UDim2.new(0, 9, 0, 6),
            Size = UDim2.new(0, 18, 0, 18)
        }), "Text")
    })

    local MinimizeBtn = SetChildren(SetProps(MakeElement("Button"), {
        Size = UDim2.new(0.5, 0, 1, 0),
        BackgroundTransparency = 1
    }), {
        AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072719338"), {
            Position = UDim2.new(0, 9, 0, 6),
            Size = UDim2.new(0, 18, 0, 18),
            Name = "Ico"
        }), "Text")
    })

    local DragPoint = SetProps(MakeElement("TFrame"), {
        Size = UDim2.new(1, 0, 0, 50)
    })

    local WindowStuff = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 10), {
        Size = UDim2.new(0, 150, 1, -50),
        Position = UDim2.new(0, 0, 0, 50)
    }), {
        AddThemeObject(SetProps(MakeElement("Frame"), {
            Size = UDim2.new(1, 0, 0, 10),
            Position = UDim2.new(0, 0, 0, 0)
        }), "Second"),
        AddThemeObject(SetProps(MakeElement("Frame"), {
            Size = UDim2.new(0, 10, 1, 0),
            Position = UDim2.new(1, -10, 0, 0)
        }), "Second"),
        AddThemeObject(SetProps(MakeElement("Frame"), {
            Size = UDim2.new(0, 1, 1, 0),
            Position = UDim2.new(1, -1, 0, 0)
        }), "Stroke"),
        TabHolder,
        SetChildren(SetProps(MakeElement("TFrame"), {
            Size = UDim2.new(1, 0, 0, 50),
            Position = UDim2.new(0, 0, 1, -50)
        }), {
            AddThemeObject(SetProps(MakeElement("Frame"), {
                Size = UDim2.new(1, 0, 0, 1)
            }), "Stroke"),
            AddThemeObject(SetChildren(SetProps(MakeElement("Frame"), {
                AnchorPoint = Vector2.new(0, 0.5),
                Position = UDim2.new(0, 0, 0.5, 0),
                Size = UDim2.new(1, 0, 1, 0)
            }), {
                CloseBtn,
                MinimizeBtn
            }), "Text")
        })
    }), "Second")

    local WindowUI = AddThemeObject(SetChildren(SetProps(MakeElement("Frame"), {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1
    }), {
        WindowStuff,
        DragPoint
    }), "Main")

    if WindowConfig.ShowIcon then
        AddThemeObject(SetProps(MakeElement("Image", WindowConfig.Icon), {
            Size = UDim2.new(0, 30, 0, 30),
            Position = UDim2.new(0, 5, 0, 5),
            BackgroundTransparency = 1
        }), "Text", WindowUI)
    end

    local IntroUI = nil
    if WindowConfig.IntroEnabled then
        IntroUI = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 10), {
            Size = UDim2.new(0, 250, 0, 250),
            Position = UDim2.new(0.5, -125, 0.5, -125),
            BackgroundTransparency = 1
        }), {
            AddThemeObject(SetProps(MakeElement("Image", WindowConfig.IntroIcon), {
                Size = UDim2.new(0, 100, 0, 100),
                Position = UDim2.new(0.5, -50, 0, 0),
                BackgroundTransparency = 1
            }), "Text"),
            SetChildren(SetProps(MakeElement("TextLabel"), {
                Size = UDim2.new(1, 0, 0, 25),
                Position = UDim2.new(0, 0, 0, 100),
                BackgroundTransparency = 1,
                Text = WindowConfig.IntroText,
                TextColor3 = Color3.fromRGB(0, 0, 0),
                TextScaled = true,
                Font = Enum.Font.Gotham,
            }), {
                AddThemeObject(SetProps(MakeElement("Frame"), {
                    Size = UDim2.new(1, 0, 0, 1)
                }), "Stroke")
            })
        }), "Main")
    end

    if WindowConfig.IntroEnabled then
        WindowUI.Parent = game.Players.LocalPlayer.PlayerGui:WaitForChild("ScreenGui")
        IntroUI.Parent = game.Players.LocalPlayer.PlayerGui:WaitForChild("ScreenGui")
        delay(3, function()
            IntroUI:Destroy()
        end)
    else
        WindowUI.Parent = game.Players.LocalPlayer.PlayerGui:WaitForChild("ScreenGui")
    end

    return {
        Window = WindowUI,
        TabHolder = TabHolder,
        Minimize = function()
            Minimized = true
            WindowUI.Size = UDim2.new(0, 150, 0, 50)
            WindowStuff.Visible = false
        end,
        Unminimize = function()
            Minimized = false
            WindowUI.Size = UDim2.new(0, 150, 1, -50)
            WindowStuff.Visible = true
        end,
        ToggleUI = function()
            UIHidden = not UIHidden
            WindowUI.Visible = not UIHidden
        end,
        Close = function()
            WindowUI:Destroy()
            WindowConfig.CloseCallback()
        end,
        GetTabs = function() return Kaanui.Tabs end,
        GetWindowConfig = function() return WindowConfig end,
    }
end

function ElementFunction:AddToggle(ToggleConfig)
    ToggleConfig = ToggleConfig or {}
    ToggleConfig.Name = ToggleConfig.Name or "Toggle"
    ToggleConfig.Default = ToggleConfig.Default or false
    ToggleConfig.Callback = ToggleConfig.Callback or function() end
    ToggleConfig.Color = ToggleConfig.Color or Color3.fromRGB(9, 99, 195)
    ToggleConfig.Flag = ToggleConfig.Flag or nil
    ToggleConfig.Save = ToggleConfig.Save or false

    local Toggle = {Value = ToggleConfig.Default, Save = Toggle.Save}

    local Click = SetProps(MakeElement("Button"), {
        Size = UDim2.new(1, 0, 1, 0)
    })

    local ToggleBox = SetChildren(SetProps(MakeElement("RoundFrame", ToggleConfig.Color, 0, 4), {
        Size = UDim2.new(0, 24, 0, 24),
        Position = UDim2.new(1, -24, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5)
    }), {
        SetProps(MakeElement("Stroke"), {
            Color = ToggleConfig.Color,
            Name = "Stroke",
            Transparency = 0.5
        }),
        SetProps(MakeElement("Image", "rbxassetid://3944680095"), {
            Size = UDim2.new(0, 20, 0, 20),
            AnchorPoint = Vector2.new(0.5, 0.5),
            Position = UDim2.new(0.5, 0, 0.5, 0),
            ImageColor3 = Color3.fromRGB(255, 255, 255),
            Name = "Ico"
        }),
    })

    local ToggleFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
        Size = UDim2.new(1, 0, 0, 38),
        Parent = ItemParent
    }), {
        AddThemeObject(SetProps(MakeElement("Label", ToggleConfig.Name, 15), {
            Size = UDim2.new(1, -12, 1, 0),
            Position = UDim2.new(0, 12, 0, 0),
            Font = Enum.Font.GothamBold,
            Name = "Content"
        }), "Text"),
        AddThemeObject(MakeElement("Stroke"), "Stroke"),
        ToggleBox,
        Click
    }), "Second")

    function Toggle:Set(Value)
        Toggle.Value = Value
        TweenService:Create(ToggleBox, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Toggle.Value and ToggleConfig.Color or OrionLib.Themes.Default.Divider}):Play()
        TweenService:Create(ToggleBox.Stroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Toggle.Value and ToggleConfig.Color or OrionLib.Themes.Default.Stroke}):Play()
        TweenService:Create(ToggleBox.Ico, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = Toggle.Value and 0 or 1, Size = Toggle.Value and UDim2.new(0, 20, 0, 20) or UDim2.new(0, 8, 0, 8)}):Play()
        ToggleConfig.Callback(Toggle.Value)
    end    

    Toggle:Set(Toggle.Value)

    AddConnection(Click.MouseEnter, function()
        TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
    end)

    AddConnection(Click.MouseLeave, function()
        TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
    end)

    AddConnection(Click.MouseButton1Up, function()
        TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
        SaveCfg(game.GameId)
        Toggle:Set(not Toggle.Value)
    end)

    AddConnection(Click.MouseButton1Down, function()
        TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
    end)

    if ToggleConfig.Flag then
        OrionLib.Flags[ToggleConfig.Flag] = Toggle
    end	
    return Toggle
end  

AddConnection(Click.MouseLeave, function()
    TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
end)

AddConnection(Click.MouseButton1Up, function()
    TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
end)

AddConnection(Click.MouseButton1Down, function()
    TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
end)

function Bind:Set(Key)
    Bind.Binding = false
    Bind.Value = Key or Bind.Value
    Bind.Value = Bind.Value.Name or Bind.Value
    BindBox.Value.Text = Bind.Value
end

Bind:Set(BindConfig.Default)
if BindConfig.Flag then				
    OrionLib.Flags[BindConfig.Flag] = Bind
end
return Bind
end  

function ElementFunction:AddTextbox(TextboxConfig)
    TextboxConfig = TextboxConfig or {}
    TextboxConfig.Name = TextboxConfig.Name or "Textbox"
    TextboxConfig.Default = TextboxConfig.Default or ""
    TextboxConfig.TextDisappear = TextboxConfig.TextDisappear or false
    TextboxConfig.Callback = TextboxConfig.Callback or function() end

    local Click = SetProps(MakeElement("Button"), {
        Size = UDim2.new(1, 0, 1, 0)
    })

    local TextboxActual = AddThemeObject(Create("TextBox", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        PlaceholderColor3 = Color3.fromRGB(210,210,210),
        PlaceholderText = "Input",
        Font = Enum.Font.GothamSemibold,
        TextXAlignment = Enum.TextXAlignment.Center,
        TextSize = 14,
        ClearTextOnFocus = false
    }), "Text")

    local TextContainer = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 4), {
        Size = UDim2.new(0, 24, 0, 24),
        Position = UDim2.new(1, -12, 0.5, 0),
        AnchorPoint = Vector2.new(1, 0.5)
    }), {
        AddThemeObject(MakeElement("Stroke"), "Stroke"),
        TextboxActual
    }), "Main")

    local TextboxFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
        Size = UDim2.new(1, 0, 0, 38),
        Parent = ItemParent
    }), {
        AddThemeObject(SetProps(MakeElement("Label", TextboxConfig.Name, 15), {
            Size = UDim2.new(1, -12, 1, 0),
            Position = UDim2.new(0, 12, 0, 0),
            Font = Enum.Font.GothamBold,
            Name = "Content"
        }), "Text"),
        AddThemeObject(MakeElement("Stroke"), "Stroke"),
        TextContainer,
        Click
    }), "Second")

    AddConnection(TextboxActual:GetPropertyChangedSignal("Text"), function()
        TweenService:Create(TextContainer, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, TextboxActual.TextBounds.X + 16, 0, 24)}):Play()
    end)

    AddConnection(TextboxActual.FocusLost, function()
        TextboxConfig.Callback(TextboxActual.Text)
        if TextboxConfig.TextDisappear then
            TextboxActual.Text = ""
        end	
    end)

    TextboxActual.Text = TextboxConfig.Default

    AddConnection(Click.MouseEnter, function()
        TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
    end)

    AddConnection(Click.MouseLeave, function()
        TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
    end)

    AddConnection(Click.MouseButton1Up, function()
        TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
        TextboxActual:CaptureFocus()
    end)

    AddConnection(Click.MouseButton1Down, function()
        TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
    end)
end 

function ElementFunction:AddColorpicker(ColorpickerConfig)
    ColorpickerConfig = ColorpickerConfig or {}
    ColorpickerConfig.Name = ColorpickerConfig.Name or "Colorpicker"
    ColorpickerConfig.Default = ColorpickerConfig.Default or Color3.fromRGB(255,255,255)
    ColorpickerConfig.Callback = ColorpickerConfig.Callback or function() end
    ColorpickerConfig.Flag = ColorpickerConfig.Flag or nil
    ColorpickerConfig.Save = ColorpickerConfig.Save or false

    local ColorH, ColorS, ColorV = 1, 1, 1
    local Colorpicker = {Value = ColorpickerConfig.Default, Toggled = false, Type = "Colorpicker", Save = ColorpickerConfig.Save}

    local ColorSelection = Create("ImageLabel", {
        Size = UDim2.new(0, 18, 0, 18),
        Position = UDim2.new(select(3, Color3.toHSV(Colorpicker.Value))),
        ScaleType = Enum.ScaleType.Fit,
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 1,
        Image = "http://www.roblox.com/asset/?id=4805639000"
    })

    local HueSelection = Create("ImageLabel", {
        Size = UDim2.new(0, 18, 0, 18),
        Position = UDim2.new(0.5, 0, 1 - select(1, Color3.toHSV(Colorpicker.Value))),
        ScaleType = Enum.ScaleType.Fit,
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 1,
        Image = "http://www.roblox.com/asset/?id=4805639000"
    })

    local Color = Create("ImageLabel", {
        Size = UDim2.new(1, -25, 1, 0),
        Visible = false,
        Image = "rbxassetid://4155801252"
    }, {
        Create("UICorner", {CornerRadius = UDim.new(0, 5)}),
        ColorSelection
    })

    local Hue = Create("Frame", {
        Size = UDim2.new(0, 20, 1, 0),
        Position = UDim2.new(1, -20, 0, 0),
        Visible = false
    }, {
        Create("UIGradient", {Rotation = 270, Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)), ColorSequenceKeypoint.new(0.40, Color3.fromRGB(0, 255, 2)), ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 140, 255)), ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 1, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 248))}),
        HueSelection
    })

    local Click = SetProps(MakeElement("Button"), {Size = UDim2.new(1, 0, 1, 0)})
    
    local Frame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {Size = UDim2.new(1, 0, 0, 38), Parent = ItemParent}), {
        AddThemeObject(SetProps(MakeElement("Label", ColorpickerConfig.Name, 15), {Size = UDim2.new(1, -12, 1, 0), Position = UDim2.new(0, 12, 0, 0), Font = Enum.Font.GothamBold}), "Text"),
        Color,
        Hue,
        Click
    }), "Second")

    AddConnection(Click.MouseButton1Down, function()
        Colorpicker.Toggled = not Colorpicker.Toggled
        Color.Visible = Colorpicker.Toggled
        Hue.Visible = Colorpicker.Toggled
        if ColorpickerConfig.Save then
            OrionLib.Flags[ColorpickerConfig.Flag] = Colorpicker
        end
    end)

    AddConnection(Color.MouseEnter, function()
        TweenService:Create(Frame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
    end)

    AddConnection(Color.MouseLeave, function()
        TweenService:Create(Frame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
    end)

    AddConnection(Click.MouseButton1Up, function()
        TweenService:Create(Frame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
    end)

    AddConnection(Color.MouseButton1Down, function()
        Colorpicker.Toggled = true
        Color.Visible = Colorpicker.Toggled
        Hue.Visible = Colorpicker.Toggled
        local Mouse = game:GetService("UserInputService"):GetMouseLocation() - workspace.CurrentCamera.CFrame.p

        local FrameMouse = Mouse.X / Frame.AbsoluteSize.X
        local FrameMouse2 = Mouse.Y / Frame.AbsoluteSize.Y
        ColorH = FrameMouse
        ColorS, ColorV = Color3.toHSV(Colorpicker.Value)
        Colorpicker.Value = Color3.fromHSV(ColorH, ColorS, ColorV)
        ColorSelection.Position = UDim2.new(ColorH, 0, 0, 0)
        ColorpickerConfig.Callback(Colorpicker.Value)
    end)

    AddConnection(Hue.MouseButton1Down, function()
        local Mouse = game:GetService("UserInputService"):GetMouseLocation() - workspace.CurrentCamera.CFrame.p
        ColorH = Hue.AbsolutePosition.Y
        ColorV = (Mouse.Y / Hue.AbsoluteSize.Y)
        Colorpicker.Value = Color3.fromHSV(ColorH, ColorS, ColorV)
        HueSelection.Position = UDim2.new(0.5, 0, 1 - ColorV, 0)
        ColorSelection.Position = UDim2.new(ColorH, 0, 0, 0)
        ColorpickerConfig.Callback(Colorpicker.Value)
    end)

    AddConnection(game:GetService("UserInputService").InputChanged, function(Input)
        if Input.UserInputType == Enum.UserInputType.MouseMovement and Colorpicker.Toggled then
            local Mouse = game:GetService("UserInputService"):GetMouseLocation() - workspace.CurrentCamera.CFrame.p
            ColorH = Hue.AbsolutePosition.Y
            ColorV = (Mouse.Y / Hue.AbsoluteSize.Y)
            Colorpicker.Value = Color3.fromHSV(ColorH, ColorS, ColorV)
            ColorSelection.Position = UDim2.new(ColorH, 0, 0, 0)
            HueSelection.Position = UDim2.new(0.5, 0, 1 - ColorV, 0)
            ColorpickerConfig.Callback(Colorpicker.Value)
        end
    end)

    AddConnection(game:GetService("UserInputService").InputEnded, function(Input)
        if Input.UserInputType == Enum.UserInputType.MouseButton1 and Colorpicker.Toggled then
            Colorpicker.Toggled = false
            Color.Visible = false
            Hue.Visible = false
        end
    end)

    Colorpicker.Value = ColorpickerConfig.Default
    return Colorpicker
end
